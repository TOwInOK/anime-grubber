name: CI Rust -> Check code and make git version

on:
  push:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  make-cache:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: cargo build -r

  Clippy:
    needs:
      - make-cache
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy
          cache: true
      - run: cargo clippy --features full -- -D warnings

  Doc-check:
    needs:
      - make-cache
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: cargo test -r --features full

  Make-Tag:
    needs:
      - Clippy
      - Doc-check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Save version
        run: |
          version=$(grep '^version =' Cargo.toml | head -n 1 | cut -d '"' -f 2)
          echo "version=$version" >> $GITHUB_ENV
          echo "Extracted version: $version"

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Make tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git fetch --tags 
          if git show-ref --tags | grep -q "refs/tags/v$version"; then
            git tag -d "v$version"
            git push origin --delete "v$version"
          fi
          git tag "v$version"
          git push origin "v$version"
